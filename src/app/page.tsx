"use client"; import { useState } from "react"; import FilterButtons from "../components/FilterButtons"; import AssetBreakdown from "../components/AssetBreakdown"; import BridgeComparison from "../components/BridgeComparison"; import TimeSelector from "../components/TimeSelector"; import SummaryStats from "../components/SummaryStats"; import StackedAreaChart from "../components/StackedAreaChart"; export default function Home() { const [assetFilters, setAssetFilters] = useState({ USDC: true, WETH: true, WBTC: true, DAI: true, USDT: true }); const [bridgeFilters, setBridgeFilters] = useState({ hyperlane: true, debridge: true }); const [timePeriod, setTimePeriod] = useState("1m"); const assetOptions = [ { id: "USDC", label: "USDC" }, { id: "WETH", label: "WETH" }, { id: "WBTC", label: "WBTC" }, { id: "DAI", label: "DAI" }, { id: "USDT", label: "USDT" } ]; const bridgeOptions = [ { id: "hyperlane", label: "Hyperlane" }, { id: "debridge", label: "deBridge" } ]; const assetData = [ { id: "USDC", name: "USDC", value: "$3,500,000", color: "#2775CA" }, { id: "WETH", name: "WETH", value: "$2,800,000", color: "#627EEA" }, { id: "WBTC", name: "WBTC", value: "$1,500,000", color: "#F7931A" }, { id: "DAI", name: "DAI", value: "$800,000", color: "#F5AC37" }, { id: "USDT", name: "USDT", value: "$400,000", color: "#26A17B" } ]; const bridgeData = [ { id: "hyperlane", name: "Hyperlane", value: "$5,500,000", percentage: "65%", color: "#FF4A8D" }, { id: "debridge", name: "deBridge", value: "$3,500,000", percentage: "35%", color: "#00C389" } ]; const summaryStats = [ { id: "total", label: "Total Value Bridged", value: "$9,000,000", change: "+12.5%" }, { id: "transfers", label: "Total Transfers", value: "1,250", change: "+8.3%" }, { id: "assets", label: "Unique Assets", value: "15", change: "+2" }, { id: "chains", label: "Active Chains", value: "5", change: "+1" } ]; const toggleAsset = (assetId) => { setAssetFilters(prev => ({ ...prev, [assetId]: !prev[assetId] })); }; const toggleBridge = (bridgeId) => { setBridgeFilters(prev => ({ ...prev, [bridgeId]: !prev[bridgeId] })); }; return ( <main className="p-8"> <h1 className="text-3xl font-bold">Hyperliquid Bridge Dashboard</h1> <p className="mb-6">Monitor assets being bridged to Hyperliquid EVM via multiple bridges</p> <div className="border rounded p-4 mb-6"> <h2 className="text-xl font-bold mb-4">Filter Options</h2> <FilterButtons title="Filter by asset" options={assetOptions} activeOptions={assetFilters} onToggle={toggleAsset} /> <FilterButtons title="Filter by bridge" options={bridgeOptions} activeOptions={bridgeFilters} onToggle={toggleBridge} /> </div> <div className="mb-8"> <h2 className="text-xl font-bold mb-4">Overview</h2> <SummaryStats stats={summaryStats} /> <div className="flex justify-between items-center mb-4"> <h3 className="text-lg font-semibold">Bridge Activity Over Time</h3> <TimeSelector selectedPeriod={timePeriod} onSelectPeriod={setTimePeriod} /> </div> <StackedAreaChart title="" height="350px" /> </div> <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8"> <div className="md:col-span-2"> <StackedAreaChart title="Asset Distribution Over Time" height="300px" showFilters={true} /> </div> <div> <AssetBreakdown assets={assetData} visibleAssets={assetFilters} /> <BridgeComparison bridges={bridgeData} visibleBridges={bridgeFilters} /> </div> </div> <div> <h2 className="text-xl font-bold mb-4">Assets Bridged by Chain</h2> <div className="grid grid-cols-1 md:grid-cols-2 gap-6"> <div> <h3 className="text-lg font-semibold mb-2 text-blue-600">Ethereum</h3> <StackedAreaChart height="250px" showFilters={true} /> </div> <div> <h3 className="text-lg font-semibold mb-2 text-green-600">Solana</h3> <StackedAreaChart height="250px" showFilters={true} /> </div> </div> <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mt-6"> <div> <h3 className="text-lg font-semibold mb-2 text-blue-500">Base</h3> <StackedAreaChart height="250px" showFilters={true} /> </div> <div> <h3 className="text-lg font-semibold mb-2 text-purple-600">Polygon</h3> <StackedAreaChart height="250px" showFilters={true} /> </div> </div> </div> </main> ); }
