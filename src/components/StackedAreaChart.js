"use client"; import { useState } from "react"; import { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from "recharts"; export default function StackedAreaChart({ title, height = "300px", showFilters = false }) { const [visibleAssets, setVisibleAssets] = useState({ USDC: true, WETH: true, WBTC: true }); const data = [ { date: "Jan 1", USDC: 100000, WETH: 80000, WBTC: 60000 }, { date: "Feb 1", USDC: 140000, WETH: 100000, WBTC: 80000 }, { date: "Mar 1", USDC: 180000, WETH: 120000, WBTC: 100000 }, { date: "Apr 1", USDC: 220000, WETH: 140000, WBTC: 120000 }, { date: "May 1", USDC: 260000, WETH: 160000, WBTC: 140000 } ]; const assets = ["USDC", "WETH", "WBTC"]; const assetColors = { USDC: "#2775CA", WETH: "#627EEA", WBTC: "#F7931A" }; const formatCurrency = (value) => { return new Intl.NumberFormat("en-US", { style: "currency", currency: "USD", maximumFractionDigits: 0 }).format(value); }; const toggleAsset = (asset) => { setVisibleAssets(prev => ({ ...prev, [asset]: !prev[asset] })); }; return ( <div className="border rounded p-4"> <div className="flex justify-between items-center mb-2"> {title && <h3 className="text-lg font-semibold">{title}</h3>} {showFilters && ( <div className="flex space-x-2"> {assets.map(asset => ( <button key={asset} onClick={() => toggleAsset(asset)} className={`px-2 py-1 rounded-full text-xs ${visibleAssets[asset] ? "bg-gray-800 text-white" : "bg-gray-200 text-gray-800"}`}> <span className="inline-block w-2 h-2 rounded-full mr-1" style={{ backgroundColor: assetColors[asset] }}></span> {asset} </button> ))} </div> )} </div> <div style={{ height }}> <ResponsiveContainer width="100%" height="100%"> <AreaChart data={data}> <CartesianGrid strokeDasharray="3 3" /> <XAxis dataKey="date" /> <YAxis tickFormatter={(value) => `$${(value / 1000).toFixed(0)}k`} /> <Tooltip formatter={(value) => formatCurrency(value)} /> <Legend onClick={(e) => toggleAsset(e)} /> {assets.map(asset => ( visibleAssets[asset] && ( <Area key={asset} type="monotone" dataKey={asset} stackId="1" stroke={assetColors[asset]} fill={assetColors[asset]} name={asset} /> ) ))} </AreaChart> </ResponsiveContainer> </div> </div> ); }
